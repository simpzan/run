#!/bin/bash

.run.init.gen() { cat > $1 << 'EOF'
#!/bin/bash
set -euo pipefail
help() { echo "run, the minimalist's task runner - https://github.com/simpzan/run"; }

main_() {
  if [[ -z "$@" ]]; then
    compgen -A function | grep -v "_$"
  elif declare -F "$1" >/dev/null; then
    "$@"
  else
    echo "Error: unknown function '$1'" >&2
  fi
}
main_ $@
EOF
}
.run.init() {
  printf 'create Runfile? (Y/n)'; read answer
  [[ "$answer" == "n" ]] && return
  .run.init.gen ./Runfile && chmod a+x $_
  echo "created Runfile."
}
.run.tasks() {
  echo "Tasks in Runfile:"
  ./Runfile | cat -n
}
run() {
  if [[ -z "$@" ]]; then
    if [[ -f ./Runfile ]]; then .run.tasks; else .run.init; fi
  elif [[ "$1" == "-h" ]]; then
    echo "run, the minimalist's task runner - https://github.com/simpzan/run"
  else
    TIMEFORMAT="Task '$1' completed in %3lR"
    time ./Runfile "$@"
  fi
}

.run.completion.complete() {
  [[ ! -f ./Runfile ]] && return
  local prefix=${COMP_WORDS[$COMP_CWORD]}
  local result=$(compgen -W "$(./Runfile)" "$prefix")
  COMPREPLY=($result)
}
.run.completion.install() {
  if [[ -n "${ZSH_VERSION+x}" ]]; then
    ! which compinit >/dev/null && autoload -Uz compinit && compinit
    ! which bashcompinit >/dev/null && autoload -Uz bashcompinit && bashcompinit
  fi
  complete -F .run.completion.complete run Runfile
}
.util.file.append_if() {
  local rc=$1 cmd=$2
  grep -q "$cmd" $rc 2>/dev/null || echo "$cmd" >> $rc
}
.run.install() {
  local selfPath=$0
  local file=.Runfile.rc
  cp $selfPath ~/$file
  local cmd="[[ -f ~/$file ]] && source ~/$file"
  .util.file.append_if ~/.bashrc "$cmd"
  .util.file.append_if ~/.zshrc "$cmd"
  echo "run command installed, restart shell session to use it."
}
if [[ "$0" == "$BASH_SOURCE" ]]; then .run.install; else .run.completion.install; fi
